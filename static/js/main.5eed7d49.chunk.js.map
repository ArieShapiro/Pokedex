{"version":3,"sources":["service/service.ts","components/TopBar.tsx","components/DetailsDialog.tsx","components/NavSection.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getData","url","a","axios","get","data","Promise","all","results","map","r","orderNumber","getOrderNumber","getDetails","name","details","pokemons","count","next","previous","pokemonData","abilities","moves","sprites","stats","types","species","speciesData","evolution_chain","evolutionChainData","possibleEvolutions","chain","evolves_to","e","picture","front_default","ability","t","type","s","stat","m","move","parseInt","split","length","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","margin","titleIcon","fontSize","TopBar","classes","className","AppBar","position","Toolbar","Typography","variant","align","dialog","padding","textTransform","width","dialogAvatar","height","DetailsDialog","dialogData","setDialog","Dialog","onClose","aria-labelledby","open","Avatar","src","idx","component","display","justifyContent","textAlign","NavSection","state","goToPrev","goToNext","IconButton","onClick","color","style","minHeight","list","listItem","boxShadow","border","borderRadius","spinner","App","useState","setState","setDialogData","useEffect","then","res","LinearProgress","List","p","ListItem","ListItemAvatar","ListItemText","primary","toUpperCase","ListItemSecondaryAction","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iOAEaA,EAAO,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACCC,IAAMC,IAAIH,GADX,uBACdI,EADc,EACdA,KADc,SAGiBC,QAAQC,IAC9CF,EAAKG,QAAQC,IAAb,uCAAiB,WAAOC,GAAP,iBAAAR,EAAA,6DACVS,EAAsBC,EAAeF,EAAET,KAD7B,SAEsBY,EAAWH,EAAEI,KAAMJ,EAAET,IAAKU,GAFhD,cAEVI,EAFU,yBAGTA,GAHS,2CAAjB,wDAJqB,cAGlBC,EAHkB,yBAYf,CACNC,MAAO,KACPC,KAAMb,EAAKa,KACXC,SAAUd,EAAKc,SACfH,aAhBqB,2CAAH,sDAoBdH,EAAU,uCAAG,WAAOC,EAAcb,EAAaU,GAAlC,mCAAAT,EAAA,sEACQC,IAAMC,IAAIH,GADlB,cACZmB,EADY,SAEkCA,EAAYf,KAAxDgB,EAFU,EAEVA,UAAWC,EAFD,EAECA,MAAOC,EAFR,EAEQA,QAASC,EAFjB,EAEiBA,MAAOC,EAFxB,EAEwBA,MAFxB,SAIQtB,IAAMC,IAAIgB,EAAYf,KAAKqB,QAAQzB,KAJ3C,cAIZ0B,EAJY,gBAKexB,IAAMC,IAAIuB,EAAYtB,KAAKuB,gBAAgB3B,KAL1D,cAKZ4B,EALY,OAOZC,EAAqBD,EAAmBxB,KAAK0B,MAAMC,WAAWvB,KAAI,SAACwB,GAAD,OAAkBA,EAAEP,QAAQZ,QAEhGC,EAA0B,CAC7BD,OACAoB,QAASX,EAAQY,cACjBd,UAAWA,EAAUZ,KAAI,SAACP,GAAD,OAAgBA,EAAEkC,QAAQtB,QACnDW,MAAOA,EAAMhB,KAAI,SAAC4B,GAAD,OAAaA,EAAEC,KAAKxB,QACrCH,cACAa,MAAOA,EAAMf,KAAI,SAAC8B,GAAD,OAAaA,EAAEC,KAAK1B,QACrCgB,mBAAoBA,EACpBR,MAAOA,EAAMb,KAAI,SAACgC,GAAD,OAAaA,EAAEC,KAAK5B,SAjBpB,kBAoBXC,GApBW,4CAAH,0DAuBVH,EAAiB,SAACX,GAAD,OAAiB0C,SAAS1C,EAAI2C,MAAM,KAAK3C,EAAI2C,MAAM,KAAKC,OAAS,K,6DCtClFC,EAAYC,aAAW,SAACC,GAAD,OAC5BC,YAAa,CACZC,KAAM,CACLC,SAAU,GAEXC,WAAY,CACXC,YAAaL,EAAMM,QAAQ,IAE5BC,MAAO,CACNJ,SAAU,EACVK,OAAQ,UAETC,UAAW,CACVD,OAAQ,SACRE,SAAU,YAwBEC,EAjBuB,WAClC,IAAMC,EAAUd,IACnB,OACC,qBAAKe,UAAWD,EAAQV,KAAxB,SACC,cAACY,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACC,cAACC,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQL,MAAOY,MAAM,SAAzD,UACC,cAAC,IAAD,CAAaN,UAAWD,EAAQH,YADjC,UAGC,cAAC,IAAD,CAAaI,UAAWD,EAAQH,sB,kBC/BhCX,EAAYC,YAAW,CAC5BqB,OAAQ,CACDC,QAAS,OACTC,cAAc,aACpB,uBAAwB,CACvBC,MAAO,MAGTC,aAAc,CACbD,MAAO,OACPF,QAAS,OACTI,OAAQ,OACRjB,OAAQ,UA8EKkB,EApEqC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,WAAYP,EAAwB,EAAxBA,OAAQQ,EAAgB,EAAhBA,UACpEhB,EAAUd,IAChB,OACC,cAAC+B,EAAA,EAAD,CACCC,QAAS,WACRF,GAAU,IAEXG,kBAAgB,sBAChBC,KAAMZ,EALP,SAOEO,GACA,sBAAKd,UAAWD,EAAQQ,OAAxB,UACC,cAACa,EAAA,EAAD,CAAQC,IAAKP,EAAWzC,QAAS2B,UAAWD,EAAQY,eACpD,cAACP,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACA,cAACD,EAAA,EAAD,UAAcU,EAAW7D,OACzB,cAACmD,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BACA,cAACD,EAAA,EAAD,UAAaU,EAAWhE,cACxB,cAACsD,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBAEA,8BACES,EAAWtD,UAAUZ,KAAI,SAACP,EAAGiF,GAAJ,OACzB,eAAClB,EAAA,EAAD,CAAYmB,UAAU,OAAtB,oBACKlF,GADL,OACSiF,IAAQR,EAAWtD,UAAUwB,OAAS,EAAI,MAAQ,IAAM,MAD/B3C,QAMpC,cAAC+D,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAEA,8BACES,EAAWlD,MAAMhB,KAAI,SAAC4B,EAAG8C,GAAJ,OACrB,eAAClB,EAAA,EAAD,CAAYmB,UAAU,OAAtB,oBACK/C,GADL,OACS8C,IAAQR,EAAWlD,MAAMoB,OAAS,EAAI,MAAQ,IAAM,MAD3BR,QAKpC,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBACA,8BACES,EAAWnD,MAAMf,KAAI,SAAC8B,EAAG4C,GAAJ,OACrB,eAAClB,EAAA,EAAD,CAAYmB,UAAU,OAAtB,oBACK7C,GADL,OACS4C,IAAQR,EAAWnD,MAAMqB,OAAS,EAAI,MAAQ,IAAM,MAD3BN,QAMpC,cAAC0B,EAAA,EAAD,CAAYC,QAAQ,KAApB,iCACA,8BACES,EAAW7C,mBAAmBrB,KAAI,SAACwB,EAAGkD,GAAJ,OAClC,eAAClB,EAAA,EAAD,CAAYmB,UAAU,OAAtB,oBACKnD,GADL,OACSkD,IAAQR,EAAW7C,mBAAmBe,OAAS,EAAI,MAAQ,IAAM,MADxCZ,QAMpC,cAACgC,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBACA,8BACES,EAAWrD,MAAMb,KAAI,SAACgC,EAAG0C,GAAJ,OACrB,eAAClB,EAAA,EAAD,CAAYmB,UAAU,OAAtB,oBACK3C,GADL,OACS0C,IAAQR,EAAWrD,MAAMuB,OAAS,EAAI,MAAQ,IAAM,MAD3BJ,c,iGC9EnCK,EAAYC,YAAW,CAC5BG,KAAM,CACLM,OAAQ,YACR6B,QAAS,OACTC,eAAgB,eAChBf,MAAO,MACPgB,UAAU,YAmCGC,EAzB+B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3D/B,EAAUd,IAChB,OACC,qBAAKe,UAAWD,EAAQV,KAAxB,SACEuC,GACA,qCACC,cAACG,EAAA,EAAD,CAAYC,QAASH,EAAUI,MAAM,UAArC,SACC,cAAC,IAAD,MAED,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,MAAM,cAAcC,MAAO,CAAExB,MAAO,OAA7D,mBACKkB,EAAMzE,SAAS,GAAGL,YADvB,qDAGqB8E,EAAMzE,SAASyE,EAAMzE,SAAS6B,OAAS,GAAGlC,YAH/D,wCAIwB8E,EAAMxE,MAJ9B,+BAOA,cAAC2E,EAAA,EAAD,CAAYC,QAASF,EAAUG,MAAM,UAArC,SACC,cAAC,IAAD,Y,SCzBAhD,EAAYC,YAAW,CAC5BG,KAAM,CACLM,OAAQ,OACRe,MAAO,OACPyB,UAAW,SAGZC,KAAM,CACL1B,MAAO,MACPf,OAAQ,QAET0C,SAAU,CACT1C,OAAQ,QACR2C,UAAW,kBACXC,OAAQ,oBACRC,aAAc,OAEfC,QAAS,CACR9C,OAAQ,QAETY,OAAQ,CACPC,QAAS,OACT,uBAAwB,CACvBE,MAAO,MAGTC,aAAc,CACbD,MAAO,OACPF,QAAS,OACTI,OAAQ,OACRjB,OAAQ,UA0EK+C,MAtEf,WACC,IAAM3C,EAAUd,IADF,EAEY0D,mBAAuB,MAFnC,mBAEPf,EAFO,KAEAgB,EAFA,OAGcD,oBAAkB,GAHhC,mBAGPpC,EAHO,KAGCQ,EAHD,OAIsB4B,qBAJtB,mBAIP7B,EAJO,KAIK+B,EAJL,KAMdC,qBAAU,WACT3G,EAAQ,qCAAqC4G,MAAK,SAACC,GAClDJ,EAASI,QAER,IAEH,IAAMlB,EAAQ,uCAAG,sBAAAzF,EAAA,sDAChBuG,EAAS,MACW,OAAhBhB,EAAOvE,MACVlB,EAAQyF,EAAOvE,MAAM0F,MAAK,SAACC,GAC1BJ,EAASI,MAJK,2CAAH,qDAuBd,OACC,sBAAKhD,UAAWD,EAAQV,KAAxB,UACC,cAAC,EAAD,KAEEuC,GAAS,cAACqB,EAAA,EAAD,CAAgBjD,UAAWD,EAAQ0C,QAASpC,QAAQ,kBAE/D,cAAC,EAAD,CAAYuB,MAAOA,EAAOC,SApBX,WAChBe,EAAS,MACe,OAApBhB,EAAOtE,UACVnB,EAAQyF,EAAOtE,UAAUyF,MAAK,SAACC,GAC9BJ,EAASI,OAgBoClB,SAAUA,IAEvDF,EACA,cAACsB,EAAA,EAAD,CAAMlD,UAAWD,EAAQqC,KAAzB,SACER,EAAMzE,SAASP,KAAI,SAACuG,GAAD,OACnB,eAACC,EAAA,EAAD,CAAUpD,UAAWD,EAAQsC,SAA7B,UACC,cAACgB,EAAA,EAAD,UACC,cAACjC,EAAA,EAAD,CAAQC,IAAK8B,EAAE9E,YAEhB,cAACiF,EAAA,EAAD,CAAcC,QAASJ,EAAElG,KAAKuG,gBAC9B,cAACC,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CACC1B,QAAS,WAtBhBa,EAuBoBM,GAtBpBpC,GAAU,IAoBJ,8BAN0CoC,EAAErG,kBAiB7C,KAEJ,cAAC,EAAD,CAAgBgE,WAAYA,EAAYP,OAAQA,EAAQQ,UAAWA,QCpGvD4C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCHdO,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.5eed7d49.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const getData = async (url: string): Promise<State> => {\r\n\tconst { data } = await axios.get(url);\r\n\r\n\tlet pokemons: PokemonDetails[] = await Promise.all(\r\n\t\tdata.results.map(async (r: Pokemon) => {\r\n\t\t\tconst orderNumber: number = getOrderNumber(r.url);\r\n\t\t\tconst details: PokemonDetails = await getDetails(r.name, r.url, orderNumber);\r\n\t\t\treturn details;\r\n\t\t})\r\n\t);\r\n\r\n\r\n\treturn {\r\n\t\tcount: 1050,\r\n\t\tnext: data.next,\r\n\t\tprevious: data.previous,\r\n\t\tpokemons,\r\n\t};\r\n};\r\n\r\nconst getDetails = async (name: string, url: string, orderNumber: number): Promise<PokemonDetails> => {\r\n\tconst pokemonData = await axios.get(url);\r\n\tconst { abilities, moves, sprites, stats, types } = pokemonData.data;\r\n\r\n\tconst speciesData = await axios.get(pokemonData.data.species.url);\r\n\tconst evolutionChainData = await axios.get(speciesData.data.evolution_chain.url);\r\n\r\n\tconst possibleEvolutions = evolutionChainData.data.chain.evolves_to.map((e: EvolvesTo) => e.species.name);\r\n\r\n\tlet details: PokemonDetails = {\r\n\t\tname,\r\n\t\tpicture: sprites.front_default,\r\n\t\tabilities: abilities.map((a: Ability) => a.ability.name),\r\n\t\ttypes: types.map((t: Type) => t.type.name),\r\n\t\torderNumber,\r\n\t\tstats: stats.map((s: Stat) => s.stat.name),\r\n\t\tpossibleEvolutions: possibleEvolutions,\r\n\t\tmoves: moves.map((m: Move) => m.move.name),\r\n\t};\r\n\r\n\treturn details;\r\n};\r\n\r\nconst getOrderNumber = (url: string) => parseInt(url.split('/')[url.split('/').length - 2]);\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\tflexGrow: 1,\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: theme.spacing(2),\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\tmargin: '0 10px',\r\n\t\t},\r\n\t\ttitleIcon: {\r\n\t\t\tmargin: '0 10px',\r\n\t\t\tfontSize: '1em',\r\n\t\t},\r\n\t})\r\n);\r\n\r\nexport interface TopBarProps {}\r\n\r\nconst TopBar: React.FC<TopBarProps> = () => {\r\n    const classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h4\" className={classes.title} align=\"center\">\r\n\t\t\t\t\t\t<FlashOnIcon className={classes.titleIcon} />\r\n\t\t\t\t\t\tPokedex\r\n\t\t\t\t\t\t<FlashOnIcon className={classes.titleIcon} />\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n\tdialog: {\r\n        padding: '30px',\r\n        textTransform:'capitalize',\r\n\t\t'&::-webkit-scrollbar': {\r\n\t\t\twidth: '0',\r\n\t\t},\r\n\t},\r\n\tdialogAvatar: {\r\n\t\twidth: '80px',\r\n\t\tpadding: '30px',\r\n\t\theight: '80px',\r\n\t\tmargin: 'auto',\r\n\t},\r\n});\r\n\r\nexport interface DetailsDialogProps {\r\n\tdialogData: PokemonDetails | undefined;\r\n\tdialog: boolean;\r\n\tsetDialog: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst DetailsDialog: React.FC<DetailsDialogProps> = ({ dialogData, dialog, setDialog }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tonClose={() => {\r\n\t\t\t\tsetDialog(false);\r\n\t\t\t}}\r\n\t\t\taria-labelledby=\"simple-dialog-title\"\r\n\t\t\topen={dialog}\r\n\t\t>\r\n\t\t\t{dialogData && (\r\n\t\t\t\t<div className={classes.dialog}>\r\n\t\t\t\t\t<Avatar src={dialogData.picture} className={classes.dialogAvatar} />\r\n\t\t\t\t\t<Typography variant=\"h6\">Name</Typography>\r\n\t\t\t\t\t<Typography >{dialogData.name}</Typography>\r\n\t\t\t\t\t<Typography variant=\"h6\">Order Number</Typography>\r\n\t\t\t\t\t<Typography>{dialogData.orderNumber}</Typography>\r\n\t\t\t\t\t<Typography variant=\"h6\">Abilities</Typography>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{dialogData.abilities.map((a, idx) => (\r\n\t\t\t\t\t\t\t<Typography component=\"span\" key={a}>\r\n\t\t\t\t\t\t\t\t{`${a}${idx !== dialogData.abilities.length - 1 ? ' | ' : ''}`}{' '}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Typography variant=\"h6\">Types</Typography>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{dialogData.types.map((t, idx) => (\r\n\t\t\t\t\t\t\t<Typography component=\"span\" key={t}>\r\n\t\t\t\t\t\t\t\t{`${t}${idx !== dialogData.types.length - 1 ? ' | ' : ''}`}{' '}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Typography variant=\"h6\">Stats</Typography>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{dialogData.stats.map((s, idx) => (\r\n\t\t\t\t\t\t\t<Typography component=\"span\" key={s}>\r\n\t\t\t\t\t\t\t\t{`${s}${idx !== dialogData.stats.length - 1 ? ' | ' : ''}`}{' '}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Typography variant=\"h6\">Possible Evolutions</Typography>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{dialogData.possibleEvolutions.map((e, idx) => (\r\n\t\t\t\t\t\t\t<Typography component=\"span\" key={e}>\r\n\t\t\t\t\t\t\t\t{`${e}${idx !== dialogData.possibleEvolutions.length - 1 ? ' | ' : ''}`}{' '}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Typography variant=\"h6\">Moves</Typography>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{dialogData.moves.map((m, idx) => (\r\n\t\t\t\t\t\t\t<Typography component=\"span\" key={m}>\r\n\t\t\t\t\t\t\t\t{`${m}${idx !== dialogData.moves.length - 1 ? ' | ' : ''}`}{' '}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default DetailsDialog;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tmargin: '10px auto',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-around',\r\n\t\twidth: '80%',\r\n\t\ttextAlign:'center'\r\n\t},\r\n});\r\n\r\nexport interface NavSectionProps {\r\n\tstate: State | null;\r\n\tgoToPrev: () => void;\r\n\tgoToNext: () => void;\r\n}\r\n\r\nconst NavSection: React.FC<NavSectionProps> = ({ state, goToPrev, goToNext }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{state && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<IconButton onClick={goToPrev} color=\"primary\">\r\n\t\t\t\t\t\t<ArrowBackIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography variant=\"h5\" color=\"textPrimary\" style={{ width: '30%' }}>\r\n\t\t\t\t\t\t{`${state.pokemons[0].orderNumber} -\r\n            \r\n                        ${state.pokemons[state.pokemons.length - 1].orderNumber}\r\n                        of ${state.count}\r\n                       `}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<IconButton onClick={goToNext} color=\"primary\">\r\n\t\t\t\t\t\t<ArrowForwardIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NavSection;\r\n","import React, { useEffect, useState } from 'react';\nimport { getData } from './service/service';\nimport TopBar from './components/TopBar';\nimport DeatailsDialog from './components/DetailsDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport NavSection from './components/NavSection';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tmargin: 'auto',\n\t\twidth: '100%',\n\t\tminHeight: '101vh',\n\t},\n\n\tlist: {\n\t\twidth: '70%',\n\t\tmargin: 'auto',\n\t},\n\tlistItem: {\n\t\tmargin: '5px 0',\n\t\tboxShadow: '1px 1px #888888',\n\t\tborder: 'solid 1px #888888',\n\t\tborderRadius: '5px',\n\t},\n\tspinner: {\n\t\tmargin: 'auto',\n\t},\n\tdialog: {\n\t\tpadding: '20px',\n\t\t'&::-webkit-scrollbar': {\n\t\t\twidth: '0',\n\t\t},\n\t},\n\tdialogAvatar: {\n\t\twidth: '80px',\n\t\tpadding: '30px',\n\t\theight: '80px',\n\t\tmargin: 'auto',\n\t},\n});\n\nfunction App() {\n\tconst classes = useStyles();\n\tconst [state, setState] = useState<State | null>(null);\n\tconst [dialog, setDialog] = useState<boolean>(false);\n\tconst [dialogData, setDialogData] = useState<PokemonDetails | undefined>();\n\n\tuseEffect(() => {\n\t\tgetData('https://pokeapi.co/api/v2/pokemon').then((res: State) => {\n\t\t\tsetState(res);\n\t\t});\n\t}, []);\n\n\tconst goToNext = async (): Promise<void> => {\n\t\tsetState(null);\n\t\tif (state!.next !== null) {\n\t\t\tgetData(state!.next).then((res: State) => {\n\t\t\t\tsetState(res);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst goToPrev = (): void => {\n\t\tsetState(null);\n\t\tif (state!.previous !== null) {\n\t\t\tgetData(state!.previous).then((res: State) => {\n\t\t\t\tsetState(res);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst showDetails = (pokemon: PokemonDetails): void => {\n\t\tsetDialogData(pokemon);\n\t\tsetDialog(true);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<TopBar />\n\n\t\t\t{!state && <LinearProgress className={classes.spinner} variant=\"indeterminate\" />}\n\n\t\t\t<NavSection state={state} goToPrev={goToPrev} goToNext={goToNext} />\n\n\t\t\t{state ? (\n\t\t\t\t<List className={classes.list}>\n\t\t\t\t\t{state.pokemons.map((p: PokemonDetails) => (\n\t\t\t\t\t\t<ListItem className={classes.listItem} key={p.orderNumber}>\n\t\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t\t<Avatar src={p.picture} />\n\t\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t\t<ListItemText primary={p.name.toUpperCase()} />\n\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tshowDetails(p);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tView Details\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t) : null}\n\n\t\t\t<DeatailsDialog dialogData={dialogData} dialog={dialog} setDialog={setDialog} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}